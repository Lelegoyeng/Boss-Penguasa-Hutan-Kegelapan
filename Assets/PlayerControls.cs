//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""f62a4b92-df5e-4177-9234-c1f7a3357560"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6bc1daa2-4e14-44b1-8b21-771d832a7e0b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""27e1ead8-a37a-4de1-8656-74b8f526084a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""b3d0297a-0e92-4b36-9b8b-a5f054d4e48b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""a9b6c31a-4c4f-4b8a-8b8c-5d9c2d7f1b1c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Defend"",
                    ""type"": ""Button"",
                    ""id"": ""d3b3b1f1-2b1a-4c8c-9c1a-5d9c2d7f1b1c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""CameraZoom"",
                    ""type"": ""Value"",
                    ""id"": ""8a8b5c4c-3b2a-4c8c-9c1a-5d9c2d7f1b1c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""EnableCameraRotation"",
                    ""type"": ""Button"",
                    ""id"": ""ee5c1f9c-7f41-4c63-905a-5b4d6b8b2e1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""SwitchSpell1"",
                    ""type"": ""Button"",
                    ""id"": ""a1f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""SwitchSpell2"",
                    ""type"": ""Button"",
                    ""id"": ""a2f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""SwitchSpell3"",
                    ""type"": ""Button"",
                    ""id"": ""a3f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""SwitchSpell4"",
                    ""type"": ""Button"",
                    ""id"": ""a4f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""SwitchSpell5"",
                    ""type"": ""Button"",
                    ""id"": ""a5f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""SwitchSpell6"",
                    ""type"": ""Button"",
                    ""id"": ""a6f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""SwitchSpell7"",
                    ""type"": ""Button"",
                    ""id"": ""a7f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""SwitchSpell8"",
                    ""type"": ""Button"",
                    ""id"": ""a8f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""SwitchSpell9"",
                    ""type"": ""Button"",
                    ""id"": ""a9f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""b7594ddb-26de-45a7-b0d5-7a925a351c50"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2063a8b5-6a45-43de-851b-65f3d46e7b58"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""64e4d037-32e1-4fb9-80e4-fc7330404dfe"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""121b84e7-4e63-4c47-9147-24a872e02802"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""57c3a96a-a38f-4dc7-a6a3-f1739b854e45"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c1f7a5f6-c36c-4f7e-9e1b-3b1b1b1b1b1b"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c8e490b-c6ea-4e3d-954a-286a2a580267"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false),ScaleVector2(x=0.05,y=0.05)"",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ea4d645-4b64-4a21-844b-65734b527344"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""143bb1cd-cc10-4eca-a2f0-a3664166fe91"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b1b1b1b-1b1b-1b1b-1b1b-1b1b1b1b1b1b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b2b2b2b-2b2b-2b2b-2b2b-2b2b2b2b2b2b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c3c3c3c-3c3c-3c3c-3c3c-3c3c3c3c3c3c"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d4d4d4d-4d4d-4d4d-4d4d-4d4d4d4d4d4d"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Defend"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e5e5e5e-5e5e-5e5e-5e5e-5e5e5e5e5e5e"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Defend"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f6f6f6f-6f6f-6f6f-6f6f-6f6f6f6f6f6f"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9e7a7e0-7a71-4b58-96a2-6b9c2a7f1b1c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""EnableCameraRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchSpell1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchSpell2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchSpell3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchSpell4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchSpell5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchSpell6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchSpell7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchSpell8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9f8b8e8-1b1b-4b1b-8b1b-1b1b1b1b1b1b"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchSpell9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Attack = m_Player.FindAction("Attack", throwIfNotFound: true);
        m_Player_Defend = m_Player.FindAction("Defend", throwIfNotFound: true);
        m_Player_CameraZoom = m_Player.FindAction("CameraZoom", throwIfNotFound: true);
        m_Player_EnableCameraRotation = m_Player.FindAction("EnableCameraRotation", throwIfNotFound: true);
        m_Player_SwitchSpell1 = m_Player.FindAction("SwitchSpell1", throwIfNotFound: true);
        m_Player_SwitchSpell2 = m_Player.FindAction("SwitchSpell2", throwIfNotFound: true);
        m_Player_SwitchSpell3 = m_Player.FindAction("SwitchSpell3", throwIfNotFound: true);
        m_Player_SwitchSpell4 = m_Player.FindAction("SwitchSpell4", throwIfNotFound: true);
        m_Player_SwitchSpell5 = m_Player.FindAction("SwitchSpell5", throwIfNotFound: true);
        m_Player_SwitchSpell6 = m_Player.FindAction("SwitchSpell6", throwIfNotFound: true);
        m_Player_SwitchSpell7 = m_Player.FindAction("SwitchSpell7", throwIfNotFound: true);
        m_Player_SwitchSpell8 = m_Player.FindAction("SwitchSpell8", throwIfNotFound: true);
        m_Player_SwitchSpell9 = m_Player.FindAction("SwitchSpell9", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Attack;
    private readonly InputAction m_Player_Defend;
    private readonly InputAction m_Player_CameraZoom;
    private readonly InputAction m_Player_EnableCameraRotation;
    private readonly InputAction m_Player_SwitchSpell1;
    private readonly InputAction m_Player_SwitchSpell2;
    private readonly InputAction m_Player_SwitchSpell3;
    private readonly InputAction m_Player_SwitchSpell4;
    private readonly InputAction m_Player_SwitchSpell5;
    private readonly InputAction m_Player_SwitchSpell6;
    private readonly InputAction m_Player_SwitchSpell7;
    private readonly InputAction m_Player_SwitchSpell8;
    private readonly InputAction m_Player_SwitchSpell9;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Attack => m_Wrapper.m_Player_Attack;
        public InputAction @Defend => m_Wrapper.m_Player_Defend;
        public InputAction @CameraZoom => m_Wrapper.m_Player_CameraZoom;
        public InputAction @EnableCameraRotation => m_Wrapper.m_Player_EnableCameraRotation;
        public InputAction @SwitchSpell1 => m_Wrapper.m_Player_SwitchSpell1;
        public InputAction @SwitchSpell2 => m_Wrapper.m_Player_SwitchSpell2;
        public InputAction @SwitchSpell3 => m_Wrapper.m_Player_SwitchSpell3;
        public InputAction @SwitchSpell4 => m_Wrapper.m_Player_SwitchSpell4;
        public InputAction @SwitchSpell5 => m_Wrapper.m_Player_SwitchSpell5;
        public InputAction @SwitchSpell6 => m_Wrapper.m_Player_SwitchSpell6;
        public InputAction @SwitchSpell7 => m_Wrapper.m_Player_SwitchSpell7;
        public InputAction @SwitchSpell8 => m_Wrapper.m_Player_SwitchSpell8;
        public InputAction @SwitchSpell9 => m_Wrapper.m_Player_SwitchSpell9;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null)
                return;

            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Defend.started += instance.OnDefend;
            @Defend.performed += instance.OnDefend;
            @Defend.canceled += instance.OnDefend;
            @CameraZoom.started += instance.OnCameraZoom;
            @CameraZoom.performed += instance.OnCameraZoom;
            @CameraZoom.canceled += instance.OnCameraZoom;
            @EnableCameraRotation.started += instance.OnEnableCameraRotation;
            @EnableCameraRotation.performed += instance.OnEnableCameraRotation;
            @EnableCameraRotation.canceled += instance.OnEnableCameraRotation;
            @SwitchSpell1.started += instance.OnSwitchSpell1;
            @SwitchSpell1.performed += instance.OnSwitchSpell1;
            @SwitchSpell1.canceled += instance.OnSwitchSpell1;
            @SwitchSpell2.started += instance.OnSwitchSpell2;
            @SwitchSpell2.performed += instance.OnSwitchSpell2;
            @SwitchSpell2.canceled += instance.OnSwitchSpell2;
            @SwitchSpell3.started += instance.OnSwitchSpell3;
            @SwitchSpell3.performed += instance.OnSwitchSpell3;
            @SwitchSpell3.canceled += instance.OnSwitchSpell3;
            @SwitchSpell4.started += instance.OnSwitchSpell4;
            @SwitchSpell4.performed += instance.OnSwitchSpell4;
            @SwitchSpell4.canceled += instance.OnSwitchSpell4;
            @SwitchSpell5.started += instance.OnSwitchSpell5;
            @SwitchSpell5.performed += instance.OnSwitchSpell5;
            @SwitchSpell5.canceled += instance.OnSwitchSpell5;
            @SwitchSpell6.started += instance.OnSwitchSpell6;
            @SwitchSpell6.performed += instance.OnSwitchSpell6;
            @SwitchSpell6.canceled += instance.OnSwitchSpell6;
            @SwitchSpell7.started += instance.OnSwitchSpell7;
            @SwitchSpell7.performed += instance.OnSwitchSpell7;
            @SwitchSpell7.canceled += instance.OnSwitchSpell7;
            @SwitchSpell8.started += instance.OnSwitchSpell8;
            @SwitchSpell8.performed += instance.OnSwitchSpell8;
            @SwitchSpell8.canceled += instance.OnSwitchSpell8;
            @SwitchSpell9.started += instance.OnSwitchSpell9;
            @SwitchSpell9.performed += instance.OnSwitchSpell9;
            @SwitchSpell9.canceled += instance.OnSwitchSpell9;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Defend.started -= instance.OnDefend;
            @Defend.performed -= instance.OnDefend;
            @Defend.canceled -= instance.OnDefend;
            @CameraZoom.started -= instance.OnCameraZoom;
            @CameraZoom.performed -= instance.OnCameraZoom;
            @CameraZoom.canceled -= instance.OnCameraZoom;
            @EnableCameraRotation.started -= instance.OnEnableCameraRotation;
            @EnableCameraRotation.performed -= instance.OnEnableCameraRotation;
            @EnableCameraRotation.canceled -= instance.OnEnableCameraRotation;
            @SwitchSpell1.started -= instance.OnSwitchSpell1;
            @SwitchSpell1.performed -= instance.OnSwitchSpell1;
            @SwitchSpell1.canceled -= instance.OnSwitchSpell1;
            @SwitchSpell2.started -= instance.OnSwitchSpell2;
            @SwitchSpell2.performed -= instance.OnSwitchSpell2;
            @SwitchSpell2.canceled -= instance.OnSwitchSpell2;
            @SwitchSpell3.started -= instance.OnSwitchSpell3;
            @SwitchSpell3.performed -= instance.OnSwitchSpell3;
            @SwitchSpell3.canceled -= instance.OnSwitchSpell3;
            @SwitchSpell4.started -= instance.OnSwitchSpell4;
            @SwitchSpell4.performed -= instance.OnSwitchSpell4;
            @SwitchSpell4.canceled -= instance.OnSwitchSpell4;
            @SwitchSpell5.started -= instance.OnSwitchSpell5;
            @SwitchSpell5.performed -= instance.OnSwitchSpell5;
            @SwitchSpell5.canceled -= instance.OnSwitchSpell5;
            @SwitchSpell6.started -= instance.OnSwitchSpell6;
            @SwitchSpell6.performed -= instance.OnSwitchSpell6;
            @SwitchSpell6.canceled -= instance.OnSwitchSpell6;
            @SwitchSpell7.started -= instance.OnSwitchSpell7;
            @SwitchSpell7.performed -= instance.OnSwitchSpell7;
            @SwitchSpell7.canceled -= instance.OnSwitchSpell7;
            @SwitchSpell8.started -= instance.OnSwitchSpell8;
            @SwitchSpell8.performed -= instance.OnSwitchSpell8;
            @SwitchSpell8.canceled -= instance.OnSwitchSpell8;
            @SwitchSpell9.started -= instance.OnSwitchSpell9;
            @SwitchSpell9.performed -= instance.OnSwitchSpell9;
            @SwitchSpell9.canceled -= instance.OnSwitchSpell9;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnDefend(InputAction.CallbackContext context);
        void OnCameraZoom(InputAction.CallbackContext context);
        void OnEnableCameraRotation(InputAction.CallbackContext context);
        void OnSwitchSpell1(InputAction.CallbackContext context);
        void OnSwitchSpell2(InputAction.CallbackContext context);
        void OnSwitchSpell3(InputAction.CallbackContext context);
        void OnSwitchSpell4(InputAction.CallbackContext context);
        void OnSwitchSpell5(InputAction.CallbackContext context);
        void OnSwitchSpell6(InputAction.CallbackContext context);
        void OnSwitchSpell7(InputAction.CallbackContext context);
        void OnSwitchSpell8(InputAction.CallbackContext context);
        void OnSwitchSpell9(InputAction.CallbackContext context);
    }
}
